
##############################################################

DEFAULTS IF NOT DEFINED CONFIG_FAIL1_TEST_TYPE
CONFIG_FAIL1_TEST_TYPE := boot

TEST_START IF ${CONFIG_FAILED} || ${CONFIG_FAIL1}
TEST_NAME = config fail 1
TEST_TYPE = ${CONFIG_FAIL1_TEST_TYPE}
BUILD_TYPE = useconfig:${THIS_DIR}/configs/config-fail1


##############################################################

DEFAULTS IF NOT DEFINED CONFIG_FAIL2_TEST_TYPE
CONFIG_FAIL2_TEST_TYPE := boot

TEST_START IF ${CONFIG_FAILED} || ${CONFIG_FAIL2}
TEST_NAME = config fail 2
TEST_TYPE = ${CONFIG_FAIL2_TEST_TYPE}
BUILD_TYPE = useconfig:${THIS_DIR}/configs/config-fail2

##############################################################

DEFAULTS IF NOT DEFINED CONFIG_FAIL3_TEST_TYPE
CONFIG_FAIL3_TEST_TYPE := boot

TEST_START IF ${CONFIG_FAILED} || ${CONFIG_FAIL3}
TEST_NAME = config fail 3
TEST_TYPE = ${CONFIG_FAIL3_TEST_TYPE}
BUILD_TYPE = useconfig:${THIS_DIR}/configs/config-fail3

##############################################################

DEFAULTS
WARNINGS_FILE := ${OUTPUT_DIR}/warnings_file_branch${VERSION}

# Start with creating a warnings file
TEST_START IF (${CONFIG_FAILED} || ${CONFIG_FAIL4}) && ${CONFIG_DO_WARNINGS} && DEFINED CONFIG4_WARNINGS_SHA1
TEST_NAME = config fail 4 make warnings file
TEST_TYPE = make_warnings_file
WARNINGS_FILE = ${WARNINGS_FILE}
BUILD_TYPE = useconfig:${THIS_DIR}/configs/config-fail4
CHECKOUT = ${CONFIG4_WARNINGS_SHA1}~1
BUILD_NOCLEAN = 0

ELSE

# if CONFIG4_WARNINGS_SHA1 is defined
DEFAULTS IF NOT DEFINED CONFIG4_WARNINGS_SHA1
CONFIG4_WARNINGS_SHA1 := HEAD

DEFAULTS IF NOT DEFINED CONFIG_FAIL4_TEST_TYPE
CONFIG_FAIL4_TEST_TYPE := test

TEST_START IF ${CONFIG_FAILED} || ${CONFIG_FAIL4}
TEST_NAME = config fail 4
TEST_TYPE = ${CONFIG_FAIL4_TEST_TYPE}
BUILD_TYPE = useconfig:${THIS_DIR}/configs/config-fail4
TEST = ${SSH} "cd ${TEST_DIR} && ./trace-cmd-filter-stress && ./run-ftrace-tests"
#WARNINGS_FILE = ${WARNINGS_FILE}
CHECKOUT = ${CONFIG_FAIL4_CHECKOUT}

##############################################################

# no max tracer
DEFAULTS IF NOT DEFINED CONFIG_FAIL5_TEST_TYPE
CONFIG_FAIL5_TEST_TYPE := test

TEST_START IF ${CONFIG_FAILED} || ${CONFIG_FAIL5}
TEST_NAME = config fail 5
TEST_TYPE = ${CONFIG_FAIL5_TEST_TYPE}
BUILD_TYPE = useconfig:${THIS_DIR}/configs/config-fail5
#BUILD_TYPE = useconfig:${THIS_DIR}/configs/config-fail5-kexec
#BUILD_TYPE = oldconfig
TEST = ${SSH} "echo 0 > /sys/kernel/tracing/options/overwrite && echo 1 > /sys/kernel/tracing/options/overwrite && cd ${TEST_DIR} && ./trace-cmd-filter-stress && ./run-ftrace-tests"

##############################################################

DEFAULTS
WARNINGS_FILE := ${OUTPUT_DIR}/warnings_file_allno${VERSION}

# Start with creating a warnings file
TEST_START IF (${CONFIG_FAILED} || ${CONFIG_FAIL6}) && ${CONFIG_DO_WARNINGS} && DEFINED CONFIG6_WARNINGS_SHA1
TEST_NAME = config fail 6 make all no warnings file
TEST_TYPE = make_warnings_file
WARNINGS_FILE = ${WARNINGS_FILE}
BUILD_TYPE = allnoconfig
CHECKOUT = ${CONFIG6_WARNINGS_SHA1}~1
BUILD_NOCLEAN = 0

# if CONFIG6_WARNINGS_SHA1 is defined, then the checkout must be too
ELSE
CONFIG6_WARNINGS_SHA1 := HEAD

DEFAULTS IF NOT DEFINED CONFIG_FAIL6_TEST_TYPE
CONFIG_FAIL6_TEST_TYPE := build

TEST_START IF ${CONFIG_FAILED} || ${CONFIG_FAIL6}
TEST_NAME = config fail 6 allnoconfig
TEST_TYPE = ${CONFIG_FAIL6_TEST_TYPE}
BUILD_TYPE = allnoconfig
#WARNINGS_FILE = ${WARNINGS_FILE}
CHECKOUT = ${CONFIG_FAIL6_CHECKOUT}

##############################################################

DEFAULTS IF NOT DEFINED CONFIG_FAIL7_TEST_TYPE
CONFIG_FAIL7_TEST_TYPE := boot

TEST_START IF ${CONFIG_FAILED} || ${CONFIG_FAIL7}
TEST_NAME = config fail 7
TEST_TYPE = ${CONFIG_FAIL7_TEST_TYPE}
BUILD_TYPE = useconfig:${THIS_DIR}/configs/config-fail7

##############################################################

DEFAULTS IF NOT DEFINED CONFIG_FAIL8_TEST_TYPE
CONFIG_FAIL8_TEST_TYPE := test

TEST_START IF ${CONFIG_FAILED} || ${CONFIG_FAIL8}
TEST_NAME = config fail 8
TEST_TYPE = ${CONFIG_FAIL8_TEST_TYPE}
ADD_CONFIG =
BUILD_TYPE = useconfig:${THIS_DIR}/configs/config-fail8
TEST = ${SSH} "trace-cmd start -p function && trace-cmd stop && trace-cmd show"

##############################################################
